name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  sonarqube:
    name: SonarQube
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry config virtualenvs.create false
          poetry install --with dev
      
      # Generate coverage report
      - name: Run tests with coverage
        run: |
          mkdir -p coverage-reports test-reports
          pytest --cov=readability --cov=cli --cov-report=xml:coverage-reports/coverage.xml
      
      # Fix coverage paths for SonarQube
      - name: Fix coverage paths
        run: |
          # Replace all absolute paths in source tag with relative path
          sed -i 's|<sources>.*</sources>|<sources><source>.</source></sources>|g' coverage-reports/coverage.xml
          
          # Add module prefixes to filenames
          sed -i 's|<class name="\(errors\|main\)\.py" filename="\(errors\|main\)\.py"|<class name="\1.py" filename="cli/\2.py"|g' coverage-reports/coverage.xml
          sed -i 's|<class name="\(models\|parser\|regexps\|utils\)\.py" filename="\(models\|parser\|regexps\|utils\)\.py"|<class name="\1.py" filename="readability/\2.py"|g' coverage-reports/coverage.xml
      
      # Generate test results
      - name: Generate test results
        run: |
          pytest --junitxml=test-reports/test-results.xml
      
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
